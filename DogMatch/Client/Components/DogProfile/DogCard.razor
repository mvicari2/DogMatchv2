@using DogMatch.Client.Services
@inject DogProfileState state

<RadzenCard class="dog-profile-card">
    <div class="row">
        <div class="col-md-6">
            <img src="@state.Profile.Dog?.ProfileImage" 
                 class="profile-page-image" />
            <br />
            <div style="margin-top:20px">
                <MatOverline>Name</MatOverline>
            </div>
            <MatSubtitle2>
                <b>@state.Profile.Dog?.Name</b>
            </MatSubtitle2>
            <div style="margin-top:20px">
                <MatOverline>Breed</MatOverline>
            </div>
            <MatSubtitle2>
                <b>@state.Profile.Dog?.Breed</b>
            </MatSubtitle2>
        </div>
        <div class="col-md-6">
            <div style="margin-top:20px">
                <MatOverline>Gender</MatOverline>
            </div>
            <MatSubtitle2>
                <b>@state.Profile.Dog?.Gender</b>
            </MatSubtitle2>
            <div style="margin-top:20px">
                <MatOverline>Weight</MatOverline>
            </div>
            <MatSubtitle2>
                <b>@state.Profile.Dog?.Weight lbs</b>
            </MatSubtitle2>
            <div style="margin-top:20px">
                <MatOverline>Birthday - Age</MatOverline>
            </div>
            <MatSubtitle2>
                <b>@state.Profile.Dog?.Birthday?.ToShortDateString() - @state.Profile.Dog?.Age</b>
            </MatSubtitle2>
            <div style="margin-top:20px">
                <MatOverline>Owner</MatOverline>
            </div>
            <MatSubtitle2>
                <b>@state.Profile.Dog?.Owner</b>
            </MatSubtitle2>
        </div>
    </div>
</RadzenCard>

@code {
    protected override void OnInitialized() => state.OnChange += RefreshComponent;
    private void RefreshComponent() => StateHasChanged();
}