@page "/DoggoProfile/{id:int}"
@using Microsoft.AspNetCore.Authorization
@using DogMatch.Client.Services
@using DogMatch.Client.Components.DogProfile

@attribute [Authorize]
@inject DogProfileState state

<AuthorizeView>
    <Authorized>
        <MatH2 Class="center-align">
            @state.Profile?.Dog?.Name
        </MatH2>
        <br />

        @if (state.Profile?.Dog == null)
        {
            <div class="col-lg-12">
                <Flow Size="200px" Color="#003366" Center="true" />
            </div>
        }
        else
        {
            <MatThemeProvider Theme="@TabsTheme">
                <MatTabGroup>
                    <MatTab>
                        <LabelContent>
                            <MatIcon Icon="@MatIconNames.Pets" Class="icon-align" />
                            <span class="nav-text-align">
                                Basic Details
                            </span>
                        </LabelContent>
                        <ChildContent>
                            <DogCard />
                        </ChildContent>
                    </MatTab>
                    <MatTab>
                        <LabelContent>
                            <MatIcon Icon="@MatIconNames.Bar_chart" Class="icon-align" />
                            <span class="nav-text-align">
                                Temperament and Personality
                            </span>
                        </LabelContent>
                        <ChildContent>
                            <TemperamentGraph />
                        </ChildContent>
                    </MatTab>
                    <MatTab>
                        <LabelContent>
                            <MatIcon Icon="@MatIconNames.Speaker_notes" Class="icon-align" />
                            <span class="nav-text-align">
                                About Dog
                            </span>
                        </LabelContent>
                        <ChildContent>
                            <BiographyProfile />
                        </ChildContent>
                    </MatTab>
                    <MatTab>
                        <LabelContent>
                            <MatIcon Icon="@MatIconNames.Image" Class="icon-align" />
                            <span class="nav-text-align">
                                Photo Album
                            </span>
                        </LabelContent>
                        <ChildContent>
                            <DogAlbumProfile />
                        </ChildContent>
                    </MatTab>
                </MatTabGroup>
            </MatThemeProvider>

            @if (state.Profile?.Dog?.Owner == context.User.Identity.Name)
            {
                <div class="center-align">
                    <MatDivider Padded="true" Class="margin-ten-top-bottom" />
                    <div class="center-row">
                        <ProfileNavigator DogId="state.Profile?.Dog?.Id ?? 0" />
                    </div>
                    <div class="center-row margin-ten-top-bottom">
                        <DeleteProfile DogId="state.Profile?.Dog?.Id ?? 0"
                                       DogName="@state.Profile?.Dog?.Name" />
                    </div>
                </div>
            }
        }
        <br />
    </Authorized>
</AuthorizeView>

@code {
    [Parameter]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        state.OnChange += RefreshComponent;
        await state.GetDoggo(Id);
    }

    private void RefreshComponent() => StateHasChanged();

    /// <summary>
    /// Initialize new color scheme for MatTabs
    /// </summary>
    MatTheme TabsTheme = new MatTheme() { Primary = "#275381" };
}
