@page "/Biography/{id:int}"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@using DogMatch.Client.Services
@using DogMatch.Client.Components.Biography
@using Shared.Globals 

@attribute [Authorize]
@inject BiographyState state

<AuthorizeView>
    <Authorized>
        @if (!state.isAuthorized)
        {
            <div class="col-lg-12">
                <Flow Size="200px" Color="#003366" Center="true" />
            </div>
        }
        else
        {
            <div class="center-align">
                <MatH3>Biography for @state.Biography.DogName</MatH3>
                <MatH5>
                    Please give us more details about your dog to complete the profile.
                </MatH5>
                <MatAccordion Class="custom-accordion col-lg-12">
                    <AboutExpansionPanel />
                    <MemoryExpansionPanel />
                    <FoodExpansionPanel />
                    <ToyExpansionPanel />
                    <SleepExpansionPanel />
                    <WalkExpansionPanel />
                </MatAccordion>
                <br />

                <button type="button"
                        class="btn btn-primary"
                        @onclick="@(args => state.SaveAndNavigate(Navigate.ToDogAlbum))">
                    Save and Next to Dog Album
                </button>
                <br />

                <BioNavigator />
                <br />
            </div>
        }
    </Authorized>
</AuthorizeView>


@code {
    [Parameter]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        // assume user is not authorized (non-owner) until WebApi results confirm authorization
        state.isAuthorized = false;

        state.OnChange += RefreshComponent;
        await state.GetBiography(Id);
    }

    private void RefreshComponent() => StateHasChanged();
}
